// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2022 www.veye.cc
 *
 */

&csi2_dphy0 {
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;
		port@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_in_ucam: endpoint@1 { //cs2i dphy port name -- unsure what this node means
				reg = <1>; // How is the register number decided?
				remote-endpoint = <&mvcam_out>;
				data-lanes = <1 2 3 4>;
			};
		};
		port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			csidphy0_out: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&mipi_csi0_input>;
			};
		};
	};
};

&csi2_dphy1 {
	status = "disabled";
};

&csi2_dphy2 {
	status = "disabled";
};

&csi2_dphy3 {
	status = "disabled";
};

&csi2_dphy4 {
	status = "disabled";
};

&csi2_dphy5 {
	status = "disabled";
};

&csi2_dphy0_hw {
	status = "okay";
};

&csi2_dphy1_hw {
	status = "disabled";
};

&i2c7 { // i2c# -- number represents the number of the controller on the SoC -- 4 or 7?
	status = "okay";
	clock-frequency = <400000>; // what frequency?
        pinctrl-names = "default";
        pinctrl-0 = <&i2c7m3_xfer>; // which node number m#?
	
	mvcam: mvcam@3b{
        status = "okay";
        compatible = "veye,mvcam"; 
        reg = <0x3b>; // camera sensor's I2C register address
        clocks = <&cru CLK_CIFOUT_OUT>; // Modified for rk3588s
        clock-names = "xvclk";
        //avdd-supply = <&vcc_mipi>;
        power-domains = <&power RK3588_PD_VI>; // Modified for rk3588
        pinctrl-names = "default";
        pinctrl-0 = <&cif_clk>; // Verify this is compatible with rk3588

        //power-gpios = <&pca9555 PCA_IO0_4 GPIO_ACTIVE_HIGH>;
        //reset-gpios = <&gpio4 RK_PB0 GPIO_ACTIVE_HIGH>;
        pwdn-gpios = <&gpio3 RK_PC6 GPIO_ACTIVE_HIGH>;

        firefly,clkout-enabled-index = <0>;
        rockchip,camera-module-index = <0>;
        rockchip,camera-module-facing = "back";
        rockchip,camera-module-name = "NC";
        rockchip,camera-module-lens-name = "NC";
        port {
			mvcam_out: endpoint {
				remote-endpoint = <&mipi_in_ucam>;
                data-lanes = <1 2 3 4>;
            };
        };
    };
};

&mipi_csi0 { //Modified to mipi_csi0
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_csi0_input: endpoint@1 {
				reg = <1>;
				remote-endpoint = <&csidphy0_out>;
			};
		};

		port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			mipi_csi0_output: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&cif_mipi2_in0>;
			};
		};
	};
};

&rkcif {
	status = "okay";
//	memory-region = <&cif_reserved>;
};
&rkcif_mipi_lvds {
	status = "okay";

	port {
		cif_mipi2_in0: endpoint {
			remote-endpoint = <&mipi_csi0_output>; // Modified enpoint renamed
		};
	};
};
&rkcif_mipi_lvds_sditf {
	status = "disabled";

};
&rkcif_mmu {
	status = "okay";
};
&rkisp {
	status = "disabled";
};

&rkisp_vir0 {
	status = "disabled";
};

&rkisp_vir1 {
	status = "disabled";
};
